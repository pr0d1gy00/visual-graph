generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  passwordHash String
  role         String    @default("editor") // admin | editor | viewer
  isActive     Boolean   @default(true)
  lastLogin    DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())

  sections     Section[]
}

model Section {
  id              Int       @id @default(autoincrement())
  title           String
  description     String?
  distribution    String    @default("grid") // grid | carousel | list | hero
  isPublished     Boolean   @default(false)
  order           Int
  animationClass  String?
  slug            String?   @unique
  isActive        Boolean    @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())

  userId          Int
  user            User      @relation(fields: [userId], references: [id])
  contents        Content[]
  metadata        Metadata[]
}

model Content {
  id              Int        @id @default(autoincrement())
  sectionId       Int
  section         Section    @relation(fields: [sectionId], references: [id])

  title           String?
  body            String?
  type            String     @default("text") // text | image | video | card | cta
  order           Int
  animationClass  String?
  styleConfig     Json?
  isActive        Boolean    @default(true)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @default(now())

  media           Media[]
  childRelations  ContentRelation[] @relation("ChildRelations")
  parentRelations ContentRelation[] @relation("ParentRelations")
  metadata        Metadata[]
}

model Media {
  id            Int      @id @default(autoincrement())
  contentId     Int
  content       Content  @relation(fields: [contentId], references: [id])
  url           String
  type          String   @default("image") // image | video | audio | pdf
  altText       String?
  caption       String?
  width         Int?
  height        Int?
  duration      Int?
  fileSize      Int?
  thumbnailUrl  String?
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
}

model ContentRelation {
  id               Int      @id @default(autoincrement())
  parentContentId  Int
  childContentId   Int
  relationType     String   @default("linked") // linked | grouped | nested
  order            Int?
  isActive         Boolean  @default(true)
  createdAt        DateTime @default(now())

  parentContent    Content  @relation("ParentRelations", fields: [parentContentId], references: [id])
  childContent     Content  @relation("ChildRelations", fields: [childContentId], references: [id])
}

model Metadata {
  id         Int      @id @default(autoincrement())
  contentId  Int?
  sectionId  Int?
  metaKey    String
  metaValue  String?

  content    Content? @relation(fields: [contentId], references: [id])
  section    Section? @relation(fields: [sectionId], references: [id])

  @@index([contentId, metaKey])
  @@index([sectionId, metaKey])
}
